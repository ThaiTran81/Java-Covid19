package com.cv19.view.body;

import Controller.CovidDAO;
import Model.AddressModel;
import Model.CurrentStateModel;
import Model.FModel;
import Model.QuarantineModel;
import com.cv19.view.components.AddressCombobox;
import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.Collator;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import utils.CurrentStateSorter;

/**
 *
 * @author ThaiTran
 */
public class ManageForm extends javax.swing.JPanel {

    String years[]
            = {"Chọn năm sinh", "1987", "1988", "1989", "1990",
                "1991", "1992", "1993", "1994",
                "1995", "1996", "1997", "1998",
                "1999", "2000", "2001", "2002",
                "2003", "2004", "2005", "2006",
                "2007", "2008", "2009", "2010",
                "2011", "2012", "2013", "2014",
                "2015", "2016", "2017", "2018",
                "2019", "2020", "2021", "2022"};

    String status[] = {"-Chọn trạng thái-", "F0", "F1", "F2", "F3", "F4+", "OK"};
    String sort[] = {"Sắp xếp theo tên tăng dần", "Sắp xếp theo tên giảm dần"};
    ArrayList<QuarantineModel> lstQua;
    ArrayList<CurrentStateModel> arrRs = null;

    private JButton button = new JButton();
    int previousClick;// fix index -1 from jtable

    public ManageForm() {
        button.setFocusable(false);
        initComponents();
        comboYear.setModel(new DefaultComboBoxModel(years));
        comboStatus.setModel(new DefaultComboBoxModel(status));
        comboSort.setModel(new DefaultComboBoxModel(sort));
        QuarantineModel first_qua = new QuarantineModel(-1, "-Chọn nơi điều trị-", "", -1, -1, -1);

        try {
            lstQua = new CovidDAO().getAllQuarantine();
        } catch (SQLServerException ex) {
            Logger.getLogger(AddForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboQua.addItem(first_qua);
        for (int i = 0; i < lstQua.size(); i++) {
            comboQua.addItem(lstQua.get(i));
        }

        table.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 14));
        table.setRowHeight(30);
        table.getColumn("Tuỳ chọn").setCellRenderer(new ButtonRenderer());
        table.getColumn("Tuỳ chọn").setCellEditor(new ButtonEditor(new JCheckBox()));
        TableColumnModel columnModel = table.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(150);
        columnModel.getColumn(1).setPreferredWidth(50);
        columnModel.getColumn(2).setPreferredWidth(15);
        columnModel.getColumn(3).setPreferredWidth(15);
        columnModel.getColumn(4).setPreferredWidth(190);

        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnViewDetailEvent();
            }

        });

    }

    void btnViewDetailEvent() {
        int selectedRow = table.getSelectedRow();
        if(selectedRow ==-1) selectedRow=previousClick;
        else previousClick = selectedRow;
        String selectedID = (String) table.getValueAt(selectedRow, 1);
        new ViewDetailDialog(selectedID).setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelHead = new javax.swing.JPanel();
        panelInput = new javax.swing.JPanel();
        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lbID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lbDob = new javax.swing.JLabel();
        comboYear = new javax.swing.JComboBox<>();
        lbSta = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();
        lbTreat = new javax.swing.JLabel();
        comboQua = new javax.swing.JComboBox<>();
        panelBtn = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        comboSort = new javax.swing.JComboBox<>();
        scTable = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        panelHead.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin"));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 5);
        flowLayout1.setAlignOnBaseline(true);
        panelHead.setLayout(flowLayout1);

        panelInput.setLayout(new java.awt.GridBagLayout());

        lbName.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lbName.setText("Họ tên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        panelInput.add(lbName, gridBagConstraints);

        txtName.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 10, 4, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 195;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 0, 0);
        panelInput.add(txtName, gridBagConstraints);

        lbID.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lbID.setText("CMND/CCCD");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 72, 0, 0);
        panelInput.add(lbID, gridBagConstraints);

        txtID.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 10, 4, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 19;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 0, 0);
        panelInput.add(txtID, gridBagConstraints);

        lbDob.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lbDob.setText("Năm sinh");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        panelInput.add(lbDob, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 4, 0, 0);
        panelInput.add(comboYear, gridBagConstraints);

        lbSta.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lbSta.setText("Trạng thái");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 72, 0, 0);
        panelInput.add(lbSta, gridBagConstraints);

        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 19;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 4, 0, 0);
        panelInput.add(comboStatus, gridBagConstraints);

        lbTreat.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lbTreat.setText("Nơi điều trị ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        panelInput.add(lbTreat, gridBagConstraints);

        comboQua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboQuaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 4, 0, 0);
        panelInput.add(comboQua, gridBagConstraints);

        panelHead.add(panelInput);

        panelBtn.setLayout(new java.awt.GridLayout(3, 1, 0, 10));

        btnSearch.setText("Tìm kiếm");
        btnSearch.setFocusable(false);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        panelBtn.add(btnSearch);

        btnReset.setText("Làm mới");
        btnReset.setFocusable(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        panelBtn.add(btnReset);

        panelHead.add(panelBtn);

        add(panelHead);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        comboSort.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSortItemStateChanged(evt);
            }
        });
        comboSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSortActionPerformed(evt);
            }
        });
        jPanel1.add(comboSort);

        add(jPanel1);

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Họ tên", "CMND/CCCD", "Năm sinh", "Trạng Thái", "Nơi điều trị", "Tuỳ chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scTable.setViewportView(table);

        add(scTable);
    }// </editor-fold>//GEN-END:initComponents

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboStatusActionPerformed

    private void comboQuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboQuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboQuaActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // TODO add your handling code here:
            String name = txtName.getText();
            String id = txtID.getText();
            String year = (String) comboYear.getSelectedItem();
            String state = (String) comboStatus.getSelectedItem();

            QuarantineModel model = (QuarantineModel) comboQua.getSelectedItem();
            int qua = model.getId();

            if (year.equalsIgnoreCase("Chọn năm sinh")) {
                year = null;
            }
            if (state.equalsIgnoreCase("-Chọn trạng thái-")) {
                state = "";
            }

            arrRs = new CovidDAO().getCurState(id, name, year, state, qua);

            addToTable();
        } catch (SQLServerException ex) {
            Logger.getLogger(ManageForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void comboSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSortActionPerformed
        // TODO add your handling code here:
        //delete
    }//GEN-LAST:event_comboSortActionPerformed

    private void comboSortItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSortItemStateChanged
        try {
            // TODO add your handling code here:
            if (arrRs == null) {
                return;
            }
            if (comboSort.getSelectedIndex() == 0) {
                arrRs.sort(new CurrentStateSorter(true));
            }
            if (comboSort.getSelectedIndex() == 1) {
                arrRs.sort(new CurrentStateSorter(false));
            }
            addToTable();
        } catch (ParseException ex) {
            Logger.getLogger(ManageForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboSortItemStateChanged

    void addToTable() {

        try {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);

            if (arrRs == null) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả phù hợp", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                model.setNumRows(0);
                return;
            }
            if (comboSort.getSelectedIndex() == 0) {
                arrRs.sort(new CurrentStateSorter(true));
            }
            if (comboSort.getSelectedIndex() == 1) {
                arrRs.sort(new CurrentStateSorter(false));
            }

            for (int i = 0; i < arrRs.size(); i++) {
                Object content[] = {arrRs.get(i).getFullname(), arrRs.get(i).getId(), arrRs.get(i).getDob(), arrRs.get(i).getState(), arrRs.get(i).getQuaratine()};
                model.addRow(content);
            }
        } catch (ParseException ex) {
            Logger.getLogger(ManageForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void reset() {
        txtID.setText("");
        txtName.setText("");
        comboYear.setSelectedIndex(0);
        comboStatus.setSelectedIndex(0);
        comboQua.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

    class ButtonRenderer extends JButton implements TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "Xem chi tiết" : value.toString());
            return this;
        }
    }

    class ButtonEditor extends DefaultCellEditor {

        private String label;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
        }

        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int row, int column) {
            label = (value == null) ? "Xem chi tiết" : value.toString();
            button.setText(label);
            return button;
        }

        public Object getCellEditorValue() {
            return new String(label);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<QuarantineModel> comboQua;
    private javax.swing.JComboBox<String> comboSort;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbDob;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbSta;
    private javax.swing.JLabel lbTreat;
    private javax.swing.JPanel panelBtn;
    private javax.swing.JPanel panelHead;
    private javax.swing.JPanel panelInput;
    private javax.swing.JScrollPane scTable;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
